//
//  RatingControl.swift
//  FirstDemo
//
//  Created by Michael Luo on 20/3/19.
//  Copyright ¬© 2019 Michael Luo. All rights reserved.
//

import UIKit

class RatingControl: UIStackView {
    // contains the list of buttons
    private var ratingButtons = [UIButton]()
    
    var rating = 0
    /*
    // Only override draw() if you perform custom drawing.
    // An empty implementation adversely affects performance during animation.
    override func draw(_ rect: CGRect) {
        // Drawing code
    }
    */
    override init(frame: CGRect) {
        super.init(frame: frame)
        
        setupButtons()
    }
    required init(coder: NSCoder) {
        super.init(coder: coder)
        
        setupButtons()
    }
    
    private func setupButton() {
        // Create the button
        let button = UIButton()
        button.backgroundColor = UIColor.red
        
        // Add constraints
        // This tells the layout engine to create constraints that define the view‚Äôs size and position based on the view‚Äôs frame and autoresizingmask properties.
        // when you are using Auto Layout, you want to replace these autogenerated constraints with your own
        button.translatesAutoresizingMaskIntoConstraints = false
        button.heightAnchor.constraint(equalToConstant: 44.0).isActive = true
        button.widthAnchor.constraint(equalToConstant: 44.0).isActive = true
        
        // Setup the button action
        button.addTarget(self, action: #selector(RatingControl.ratingButtonTapped(button:)), for: .touchUpInside)
        
        // Add the button to the stack
        addArrangedSubview(button)
        
        // Add the new button to the rating button array
        ratingButtons.append(button)
    }
    
    private func setupButtons() {

        // Create the button
        let button = UIButton()
        button.backgroundColor = UIColor.red
        
        // Add constraints
        button.translatesAutoresizingMaskIntoConstraints = false
        button.heightAnchor.constraint(equalToConstant: 44.0).isActive = true
        button.widthAnchor.constraint(equalToConstant: 44.0).isActive = true
        
        // Add the button to the stack
        addArrangedSubview(button)
        
    }
    
    @objc func ratingButtonTapped(button: UIButton) {
        print("Button pressed üëç")
    }
}
